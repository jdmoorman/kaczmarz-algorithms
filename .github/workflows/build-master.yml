name: CI

on:
  push:
    branches:
      - master

jobs:
  package:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
    - name: Build Package
      run: |
        python setup.py sdist bdist_wheel
    - name: "List result"
      run: |
        ls -l dist
    - name: "Check long_description"
      run: |
        python -m pip install --upgrade twine
        python -m twine check dist/*
  test:
    name: Test in python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        os: [ubuntu-latest, windows-latest, macos-latest]
    env:
      COVERAGE_PYTHON_VERSION: 3.7
      COVERAGE_OS: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install --upgrade virtualenv tox tox-gh-actions
    - name: "Run tox targets for ${{ matrix.python-version }}"
      run: "python -m tox"
    - name: "Generate coverage report"
      if: env.COVERAGE_PYTHON_VERSION == matrix.python-version && env.COVERAGE_OS == matrix.os
      run: |
        python -m pip install --upgrade coverage
        python -m coverage xml
    - name: "Upload coverage to Codecov"
      if: env.COVERAGE_PYTHON_VERSION == matrix.python-version && env.COVERAGE_OS == matrix.os
      uses: "codecov/codecov-action@v1"
      with:
        fail_ci_if_error: true
